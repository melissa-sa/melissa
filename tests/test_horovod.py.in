#!@PYTHON_EXECUTABLE@

###################################################################
#                            Melissa                              #
#-----------------------------------------------------------------#
#   COPYRIGHT (C) 2017  by INRIA and EDF. ALL RIGHTS RESERVED.    #
#                                                                 #
# This source is covered by the BSD 3-Clause License.             #
# Refer to the  LICENSE file for further information.             #
#                                                                 #
#-----------------------------------------------------------------#
#  Original Contributors:                                         #
#    Theophile Terraz,                                            #
#    Bruno Raffin,                                                #
#    Alejandro Ribes,                                             #
#    Bertrand Iooss,                                              #
###################################################################

# -*- coding: utf-8 -*-

"""
    Python sequential version of melissa_server.

    usage:
    python melissa_server.py <options>
"""

import os
import sys
import signal
import imp
import getopt
import numpy as np
import ctypes
import time

imp.load_source("melissa_learning", "@CMAKE_INSTALL_PREFIX@/lib/melissa_learning.py")
import melissa_learning

def f (x1, x2, t, x01, x02):
    return np.sin(t*0.1*x1+x01) + np.cos(t*0.2*x2-x02)


x1size = 10
x2size = 10
tsize = 10

t1 = time.time()

handle = melissa_learning.model_init(x1size*x2size, 3)

i1=0
i2=0
while i1< 10000:

    print "Iteration "+str(i1)
    x01 = np.random.uniform()
    x02 = np.random.uniform()
    t = float(np.random.randint(1,11))
    vect = []
    for x1 in range(x1size):
        for x2 in range(x2size):
            vect.append(f (x1, x2, t, x01, x02))
    x = np.array([x01, x02, t])
    y = np.array(vect)
    melissa_learning.add_to_training_set(x, y, handle)
    i2 += 1
    if i2 == 10:
        print "Learning"
        res = melissa_learning.train_batch(handle)
        print "loss = " + str(res)
        i2 = 0
    i1 += 1

i2 = 0
for i in range(100):
    vect = []
    t = float(np.random.randint(1,11))
    x01 = np.random.uniform()
    x02 = np.random.uniform()
    for x1 in range(x1size):
        for x2 in range(x2size):
            vect.append(f (x1, x2, t, x01, x02))
    x = np.array([x01, x02, t])
    y = np.array(vect)
    #print "x= " +str(x)
    melissa_learning.add_to_testing_set(x, y, handle)
    i2 += 1
    if i2 == 10:
        print "Testing"
        res = melissa_learning.test_batch(handle)
        print "loss = " + str(res)
        i2 = 0

melissa_learning.model_finalize(".", "test_horovod.h5")

print "time: "+str(time.time() - t1)
